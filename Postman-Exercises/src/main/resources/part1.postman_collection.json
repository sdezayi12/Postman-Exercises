{
  "info": {
    "_postman_id": "7f5e22fc-81b3-4509-a3c7-a7d87cbb2f39",
    "name": "part1",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "33217064"
  },
  "item": [
    {
      "name": "GET /authors (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful Response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /authors (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 404 'No Authors Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "const apiUrl = \"http://localhost:8080/authors/1\";\r",
              " \r",
              "// Define the request options\r",
              "const requestOptions = {\r",
              "    method: 'DELETE',\r",
              "    headers: {\r",
              "        'Accept': 'application/json',\r",
              "    }\r",
              "};\r",
              " \r",
              "// Make the API call to fetch all authors\r",
              "pm.sendRequest(apiUrl, requestOptions, (error, response) => {\r",
              "    console.log('Response:', response.json());\r",
              "        pm.expect(response.status).to.eql(404);\r",
              "    \r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /authors (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 201 'Created'\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"Sarah Dezayi\",\r\n    \"birthyear\": \"2004\",\r\n    \"nationality\": \"Kurdish\"\r\n}\r\n\r\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/authors",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /authors (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 400 'Invalid Input'\", function () {\r",
              "    pm.response.to.have.status(400);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"Sarah Dezayi\",\r\n    \"birthyear\": \"2004y\",\r\n    \"nationality\": \"Kurdish\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/authors",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /authors/{id} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /authors/{id} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 404 'Author not found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors/13",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "13"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PUT  /authors/{id} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"Pearl Otonekwu\",\r\n    \"birthyear\": 2006,\r\n    \"nationality\": \"Nigerian\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/authors/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PUT /authors/{id} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 404 'Author not found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"name\": \"Pearl Otonekwu\",\r\n    \"birthyear\": 2006,\r\n    \"nationality\": \"Nigerian\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/authors/8",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "8"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /authors/{id} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 204 'No content'\", function () {\r",
              "    pm.response.to.have.status(204);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /authors/{id} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 404 'Author not found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors/8",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "8"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 404 'No Books Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /books (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 201 'Created'\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"ISBN\": \"ISBN-553-632-100\",\r\n    \"title\": \"Love\",\r\n    \"publicationYear\": 2014,\r\n    \"price\": 20.00,\r\n    \"authors\": [\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Sarah Dezayi\",\r\n            \"birthyear\": 2004,\r\n            \"nationality\": \"Kurdish\"\r\n        }\r\n    ]\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /books (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 400 'Invalid Input'\", function () {\r",
              "    pm.response.to.have.status(400);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /authors/{id}/books (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors/2/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "2",
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /authors/{id}/books (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 404 'Author not found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/authors/1/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "authors",
            "1",
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books/{ISBN} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('ISBN');\r",
              "    pm.expect(jsonData).to.have.property('title');\r",
              "    pm.expect(jsonData).to.have.property('price');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/books/ISBN-553-632-503",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-503"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books/{ISBN} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Error response - 404 'Book Not Found\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/books/ISBN-557-632-506",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-557-632-506"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PUT /books/{ISBN} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('ISBN');\r",
              "    pm.expect(jsonData).to.have.property('title');\r",
              "    pm.expect(jsonData).to.have.property('publicationYear');\r",
              "    pm.expect(jsonData).to.have.property('price');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{   \r\n    \"title\": \"Love\",\r\n    \"publicationYear\": 2015,\r\n    \"price\": 70.0\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/books/ISBN-553-632-503",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-503"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PUT /books/{ISBN} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404)\r",
              "pm.test(\"Error response - 404 'Book Not Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{   \r\n    \"title\": \"Love\",\r\n    \"publicationYear\": 2015,\r\n    \"price\": 70.0\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/books/ISBN-553-632-504",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-504"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /books/{ISBN} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (204)\r",
              "pm.test(\"Successful response - 204 'No Content'\", function () {\r",
              "    pm.response.to.have.status(204);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"ISBN\": \"1234567890\",\r\n    \"title\": \"Sample Book\",\r\n    \"publicationYear\": 2023,\r\n    \"price\": 29.99,\r\n    \"authors\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Jane Doe\",\r\n            \"birthyear\": 1985,\r\n            \"nationality\": \"American\"\r\n        }\r\n    ]\r\n}\r\n\r\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/books/ISBN-553-632-100",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-100"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /books/{ISBN} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404)\r",
              "pm.test(\"Error response - 404 'Book Not Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"ISBN\": \"1234567890\",\r\n    \"title\": \"Sample Book\",\r\n    \"publicationYear\": 2023,\r\n    \"price\": 29.99,\r\n    \"authors\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Jane Doe\",\r\n            \"birthyear\": 1985,\r\n            \"nationality\": \"American\"\r\n        }\r\n    ]\r\n}\r\n\r\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/books/ISBN-553-632-500",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-500"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books/{ISBN}/authors (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "localhost:8080/books/ISBN-553-632-503/authors",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-503",
            "authors"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books/{ISBN}/authors (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404)\r",
              "pm.test(\"Error response - 404 'Book Not Found or No Author(s) of Book'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "localhost:8080/books/ISBN-553-632-504/authors",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-504",
            "authors"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /orders (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.be.an('array');\r",
              "    pm.expect(jsonData.length).to.be.greaterThan(0);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /orders (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404) - No orders found\r",
              "pm.test(\"Error response - 404 'No Orders Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /orders (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (201)\r",
              "pm.test(\"Successful response - 201 'Created'\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('Id');\r",
              "    pm.expect(jsonData).to.have.property('datetime');\r",
              "    pm.expect(jsonData).to.have.property('customerName');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"datetime\": \"2024-04-23T15:00:00.000Z\",\r\n    \"customerName\": \"Pearl Otonekwu\",\r\n    \"books\": [\r\n        {\r\n            \"ISBN\": \"ISBN-553-632-503\",\r\n            \"title\": \"Hi\",\r\n            \"publicationYear\": 2020,\r\n            \"price\": 29.99\r\n        }\r\n    ]\r\n}\r\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /orders (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (400)\r",
              "pm.test(\"Error response - 400 'Invalid Input\", function () {\r",
              "    pm.response.to.have.status(400);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"datetime\": \"2024e-04-23T15:00:00.000Z\",\r\n    \"customerName\": \"Pearl Otonekwu\",\r\n    \"books\": [\r\n        {\r\n            \"ISBN\": \"ISBN-553-632-503\",\r\n            \"title\": \"Kiss\",\r\n            \"publicationYear\": 2015,\r\n            \"price\": 70.0\r\n        }\r\n    ]\r\n}\r\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books/{ISBN}/orders (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.be.an('array');\r",
              "    pm.expect(jsonData.length).to.be.greaterThan(0);\r",
              "    // Add additional assertions as needed\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/books/ISBN-553-632-503/orders",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-503",
            "orders"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /books/{ISBN}/orders (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404) - Book not found or No orders found\r",
              "pm.test(\"Error response - 404 'Book Not Found or No Order(s) For Book\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/books/ISBN-553-632-504/orders",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "books",
            "ISBN-553-632-504",
            "orders"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /orders/{id} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('Id');\r",
              "    pm.expect(jsonData).to.have.property('datetime');\r",
              "    pm.expect(jsonData).to.have.property('customerName');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"ISBN\": \"ISBN-553-633-980\",\r\n    \"title\": \"Kiss\",\r\n    \"publicationYear\": 2015,\r\n    \"price\": 70,\r\n    \"authors\": [\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"Pearl Otonekwu\",\r\n            \"birthyear\": 2006,\r\n            \"nationality\": \"Nigerian\"\r\n        }\r\n    ]\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /orders/{id} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404) - Order not found\r",
              "pm.test(\"Error response - 404 'Order Not Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"ISBN\": \"ISBN-553-633-980\",\r\n    \"title\": \"Kiss\",\r\n    \"publicationYear\": 2015,\r\n    \"price\": 70,\r\n    \"authors\": [\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"Pearl Otonekwu\",\r\n            \"birthyear\": 2006,\r\n            \"nationality\": \"Nigerian\"\r\n        }\r\n    ]\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/6",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "6"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PUT /orders/{id} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.have.property('Id');\r",
              "    pm.expect(jsonData).to.have.property('datetime');\r",
              "    pm.expect(jsonData).to.have.property('customerName');\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"Id\": 1,\r\n    \"datetime\": \"2024-04-23T15:00:00.000Z\",\r\n    \"customerName\": \"Pearl Ehinze\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/1",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "PUT /orders/{id} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404) - Order not found\r",
              "pm.test(\"Error response - 404 'Order Not Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"Id\": 1,\r\n    \"datetime\": \"2024-04-23T15:00:00.000Z\",\r\n    \"customerName\": \"Pearl Ehinze\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/6",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "6"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /orders/{id}/books (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData).to.be.an('array');\r",
              "    pm.expect(jsonData.length).to.be.greaterThan(0);\r",
              "    // Add additional assertions as needed\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/1/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "1",
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "GET /orders/{id}/books (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (404) - Order not found or no books in the order\r",
              "pm.test(\"Error response - 404 'Order Not Found or No Books In Order'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/10/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "10",
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /orders/{id}/books (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for successful response (200)\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"ISBN\": \"ISBN-545-632-506\",\r\n    \"title\":\"Hello\",\r\n    \"publicationYear\": 2019,\r\n    \"price\": 30.99\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/1/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "1",
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "POST /orders/{id}/books (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test for error response (400)\r",
              "pm.test(\"Error response - 404 'Order Not Found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"ISBN\": \"ISBN-553-632-100\",\r\n    \"title\": \"Stuff\",\r\n    \"publicationYear\": 2014,\r\n    \"price\": 20.00\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/5/books",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "5",
            "books"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /orders/{id}/books/{ISBN} (S)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Successful response test\r",
              "pm.test(\"Successful response - 200 'OK'\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/2/books/ISBN-545-632-506",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "2",
            "books",
            "ISBN-545-632-506"
          ]
        }
      },
      "response": []
    },
    {
      "name": "DELETE /orders/{id}/books/{ISBN} (E)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Error response test\r",
              "pm.test(\"Error response - 404 'Order Not Found or Book Not found'\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/orders/2/books/ISBN-400-546-502",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "orders",
            "2",
            "books",
            "ISBN-400-546-502"
          ]
        }
      },
      "response": []
    }
  ]
}